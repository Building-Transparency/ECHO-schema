import { z } from "zod";


export const AssetTypes = z.enum([
  "Building",
  "Infrastructure",
  "Landscapes",
]);

export const BuildingConstructionTypes = z.enum([
  "New Construction",
  "Existing Asset",
  "Renovation/Tenant Improvement (TI)",
]);

export const BuildingConstructionTypes2 = z.enum([
  "Whole Building",
  "Interior Only",
]);

export const InfrastructureConstructionTypes = z.enum([
  "New Construction",
  "Existing Asset",
  "Major Reconstruction",
  "Minor Renovation",
  "Extension",
  "Retrofit + Extension",
]);

export const SectorTypes = z.enum([
  "Food",
  "Data/Communications",
  "Energy",
  "Industrial",
  "Land/Environmental",
  "Transportation",
  "Waste",
  "Water",
  "Other",
]);

export const InfrastructureUseTypes = z.enum([
  "Agriculture/Farm",
  "Airport",
  "Bridge",
  "Campus",
  "Dam/Levee",
  "Ecosystem Preservation",
  "Energy Distribution",
  "Energy Generation",
  "Environmental Restoration",
  "Garden",
  "Green Roof",
  "Hazardous Waste",
  "Hospitality",
  "Light Rail",
  "Maritime/Port",
  "Mixed Development",
  "Park",
  "Parking Lot",
  "Plaza",
  "Rail",
  "Recreational",
  "Reservoir",
  "Road",
  "Runway",
  "Site Development",
  "Solid Waste",
  "Stormwater",
  "Streetscape",
  "Streetcar",
  "Subway",
  "Trail",
  "Tunnel",
  "Wastewater Collection",
  "Wastewater Treatment",
  "Water Distribution",
  "Water Treatment",
  "Waterway",
  "Other: Infrastructure",
  "Other: Site",
])

export const UseTypes = z.enum([
  "Airport",
  "Bank/Financial Institution",
  "Courthouse",
  "Data Center",
  "Education: General",
  "Education: College/University (campus-level)",
  "Education: K-12 School",
  "Food Sales: Convenience Store (w/ or w/out gas station)",
  "Food Sales:General",
  "Food Sales: Supermarket/Grocery",
  "Food Service: Fast Food",
  "Food Service: General",
  "Food Service: Restaurant/Cafeteria",
  "Health Care: Clinic",
  "Health Care: Inpatient",
  "Health Care: Medical Office",
  "Health Care: Nursing/Assisted Living",
  "Health Care: Outpatient",
  "Laboratory",
  "Lodging: General",
  "Lodging: Hotel/Motel",
  "Lodging: Residence Hall/Dormitory",
  "Retail Store",
  "Retail: Non-mall, Vehicle Dealerships, misc.",
  "Retail: Mall",
  "Office: Small (<10,000 sf/930 m2)",
  "Office: Medium (<100,000 sf/9300 m2)",
  "Office: Large (>100,000 sf/9300 m2)",
  "Parking",
  "Public Assembly: General",
  "Public Assembly: Entertainment/Culture",
  "Public Assembly: Library",
  "Public Assembly: Recreation",
  "Public Assembly: Social/Meeting",
  "Public Safety: General",
  "Public Safety: Fire/Police Station",
  "Religious Worship",
  "Residential: Mobile Homes",
  "Residential: Multifamily (2-4 units)",
  "Residential: Multifamily (5 or more units)",
  "Residential: Single-Family Attached",
  "Residential: Single-Family Detached",
  "Residential: Mid-Rise/High-Rise",
  "Service (vehicle repair/service, postal service)",
  "Warehouse: Self-storage",
  "Storage: Distribution/Shipping Center",
  "Storage: General",
  "Storage: Non-refrigerated warehouse",
  "Storage: Refrigerated warehouse",
  "Vacant",
  "Other",
]);

export const EnergyCodes = z.enum([
  "ASHRAE 189.1-2020",
  "ASHRAE 90.1-2019",
  "California Title 24 2019",
  "IECC 2021",
  "NECB 2017",
  "NECB 2020",
  "NECB 2025",
  "NYCECC",
  "Massachusetts Stretch Energy Code",
  "Seattle Energy Code (SEC)",
  "Other",
]);

export const RiskCategories = z.enum([
  "I (low risk to human life)",
  "II (all buildings and other structures)",
  "III (buildings with a substantial risk to cause economic impact and/or mass disruption)",
  "IV (buildings and other structures designated as essential facilities or the failure of which could pose a substantial hazard to the community)",
]);

export const EarthquakeImportanceFactor = z.enum([
  "Low",
  "Normal",
  "High",
  "Post-Disaster",
]);

export const SeismicDesignCategory = z.enum([
  "A",
  "B",
  "C",
  "D",
  "E",
  "F",
]);

export const HorizontalGravitySystem = z.enum([
  "Concrete: PT Framing",
  "Concrete: Non-PT Framing",
  "Concrete: Precast",
  "Concrete: Other",
  "Steel: Frame + Concrete on Metal Deck",
  "Steel: Frame + Bare Metal Deck",
  "Steel: Other",
  "Wood: Joists and Sheathing",
  "Wood: Engineered Panels",
  "Wood: Other",
  "Other",
]);

export const VerticalGravitySystem = z.enum([
  "Concrete: CIP",
  "Concrete: Precast",
  "Concrete: Other",
  "Steel: Columns",
  "Steel: Cold-Formed",
  "Steel: Other",
  "Wood: Mass Timber",
  "Wood: Light-Frame",
  "Wood: Other",
  "Masonry",
  "Other",
]);

export const LateralSystem = z.enum([
  "Concrete: Shear Walls",
  "Concrete: Moment Frames",
  "Concrete: Other",
  "Steel: Braced Frames",
  "Steel: Moment Frames",
  "Steel: Other",
  "Light Frame Shear Panels",
  "Masonry: Shear Walls",
  "Wood: Shear Panels",
  "Wood: Other",
  "Other",
]);

export const SystemFoundationType = z.enum([
  "Shallow foundation",
  "Deep foundation < 50' (15m)",
  "Deep foundation > 50' (15m)",
  "Other Foundation System"
]);

export const ProjectPhase = z.enum([
  "existing condition",
  "concept/planning",
  "schematic design",
  "design development",
  "construction documentation",
  "construction (administration)",
  "as-built",
  "in-use",
]);

export const LCATool = z.enum([
  "Athena IE",
  "Beacon",
  "BEAM",
  "Build Carbon Neutral",
  "CARE Tool",
  "Carbon Conscience",
  "cove.tool",
  "EC3",
  "EPIC",
  "Embodied Carbon Order of Magnitude (ECOM)",
  "eTOOL",
  "OneClick LCA",
  "Pathfinder",
  "Simapro",
  "tallyLCA",
  "Other",
]);

export const LCAStages = z.enum([
  "A0",
  "A1-A3",
  "A4",
  "A5",
  "A5.1",
  "A5.2",
  "A5.3",
  "A5.4",
  "B1",
  "B1.1",
  "B1.2",
  "B2",
  "B3",
  "B4",
  "B5",
  "B6",
  "B7",
  "B8",
  "C1",
  "C2",
  "C3",
  "C4",
  "D",
  "D1",
  "D2",
]);

export const MaterialQtySource = z.enum([
  "Extrapolation from Construction Type Land Use Area",
  "Manual Approximation",
  "BIM Model",
  "Design Estimates/ Manual Takeoff from Design Documentation",
  "Construction Estimate/Contractors Bill of Materials",
  "As-Built",
  "Other Data Source",
]);

export const EnergyModel = z.enum([
  "30 AEDG AEDG",
  "50 AERG AEDG",
  "Autodesk Insight",
  "BE Opt",
  "CBECC (Title 24 Compliance Tool)",
  "CBECC-Res (Title 24 Compliance Tool)",
  "Energos (Vectorworks Plug-In)",
  "EPIC Tool",
  "ClimateStudio",
  "Cove.tool",
  "DOE - 2.1E Energy Pro",
  "DOE - 2.1E VisualDOE",
  "EnergyGauge Summit - DOE -2.1E",
  "DOE- 2.2",
  "DOE -2.2 eQuest",
  "DOE - 2.2 GreenBuildingStudio",
  "DOE - 2.2 Other",
  "Energy Gauge Summit, DOE 2.2E",
  "EnergyPlus AECOSim",
  "EnergyPlus DesignBuilder",
  "EnergyPlus Ladybug Tools",
  "EnergyPlus OpenStudio",
  "EnergyPlus Simergy",
  "EnergyPlus Other",
  "HAP",
  "HEED",
  "HOT2000",
  "Home Energy Saver",
  "IES - Virtual Environment",
  "Modelica",
  "NEO Net Energy Optimizer",
  "Passive House Planning Package (PHPP)",
  "PlanITImpact",
  "REM Rate",
  "Sefaira",
  "SPEED",
  "TRACE 3D+",
  "TRACE 700",
  "TRNSYS",
  "URBANopt",
  "WUFI Passive",
  "Other: String",
  "Other International: String",
]);

export const GWPEnergySource = z.enum([
  "20 year",
  "100 year",
  "Other",
]);

export const ElectricitySource = z.enum([
  "Imported from a utility",
  "On-site electricity generation",
  "Direct-wired from dedicated offsite source",
  "Other",
]);

export const BiogenicCarbonAccounting = z.enum([
  "0/0",
  "-1/+1",
  "Dynamic LCA",
  "Ton-Year Accounting or Discounting Method"
]);

export const BiogenicCertification = z.enum([
  "Forest Stewardship Council (FSC)",
  "Sustainable Forestry Initiative (SFI)",
  "Other",
]);

export const SubstructureScope = z.enum([
  "Foundations",
  "Subgrade Enclosures",
  "Slabs-On-Grade",
  "Water and Gas Mitigation",
  "Substructure Related Activities",
  "Other",
]);

export const ShellSuperstructureScope = z.enum([
  "Floor Construction, Roof Construction",
  "Stairs",
  "Frame: Columns, Beams, Load-Bearing Walls",
  "Balconies",
  "Other",
]);

export const ShellExteriorScope = z.enum([
  "Exterior Wall",
  "Exterior Windows",
  "Exterior Doors and Grilles",
  "Exterior Louvers and Vents",
  "Exterior Wall Appurtenances",
  "Exterior Wall Specialties",
  "Roofing",
  "Roofing Appurtenances",
  "Traffic Bearing Horizontal Enclosures",
  "Horizontal Openings",
  "Overhead Exterior Enclosures",
  "Other",
]);

export const InteriorConstructionScope = z.enum([
  "Interior Partitions",
  "Interior Windows",
  "Interior Doors",
  "Interior Grilles and Gates",
  " Raised Floor Construction",
  "Suspended Ceiling Construction",
  "Suspended Ceiling Construction",
  "Other",
]);

export const InteriorFinishesScope = z.enum([
  "Wall Finishes",
  "Interior Fabrications",
  "Flooring",
  "Stair Finishes",
  "Ceiling Finishes",
  "Other",
]);

export const ServicesMechanicalScope = z.enum([
  "Ducts and Pipes and Their Insulation",
  "Mechanical Equipment: Chillers",
  "Cooling Towers",
  "Air Handlers",
  "Heat Pumps",
  "Boilers",
  "Chilled Beams",
  "VRF Systems",
  "VAVs",
  "Heat Exchangers",
  "Air Conditioners",
  "Other",
]);

export const ServicesElectricalScope = z.enum([
  "Light Fixtures",
  "Power Supply And Distribution",
  "Power Management Systems Batteries",
  "Power Management Systems: Uninterrupted Power Supplies",
  "Power Management Systems: Switchgears",
  "Power Management Systems: Transformers",
  "Power Generation Systems",
  "Other",
]);

export const ServicesPlumbingScope = z.enum([
  "Pipes Servicing Equipment And Their Insulation",
  "Plumbing Fixtures And Plumbing And Fire Protection Equipment",
  "Other",
]);

export const SiteworkScope = z.enum([
  "Site Preparations",
  "Site Improvements",
  "Liquid and Gas Site Utilities",
  "Electrical Site Improvements",
  "Communications",
  "Misc. Site Construction",
  "Other",
]);

export const EquipmentScope = z.enum([
  "Vehicle and Pedestrian Equipment",
  "Commercial Equipment",
  "Institutional Equipment",
  "Residential Equipment",
  "Entertainment and Recreational Equipment",
  "Other",
]);

export const FurnishingScope = z.enum([
  "Fixed Furnishings",
  "Movable Furnishings",
  "Other"
]);

export const Certifications = z.enum([
  "LEED v4.0 Certified",
  "LEED v4.0 Silver",
  "LEED v4.0 Gold",
  "LEED v4.0 Platinum",
  "LEED v4.1 Certified",
  "LEED v4.1 Silver",
  "LEED v4.1 Gold",
  "LEED v4.1 Platinum",
  "Envision",
  "BREEAM",
  "ILFI Zero Carbon 1.0",
  "ILFI LBC 3.1",
  "ILFI LBC 4.0",
  "ILFI Zero Energy",
  "Green Globes",
  "SE2050",
  "AIA DDx",
  "MEP 2040",
  "Contractor's Commitment",
  "Climate Positive",
  "SE2050, UK BECD Database",
  "CLF WBLCA v2 Benchmarking Study",
  "Other",
]);

export const OwnerType = z.enum([
  "Government - Federal",
  "Government - State/Province",
  "Government - Local",
  "Corporate",
  "Higher-Education",
  "Non-Profit",
  "Public-Private Partnership",
  "Investor-Developer",
  "Other",
]);

export const ProjectStatus = z.enum([
  "Active",
  "On Hold",
  "Complete",
  "Cancelled",
]);

export const ProjectSurroundings = z.enum([
  "Urban",
  "Suburban",
  "Rural",
]);

export const DevelopmentSite = z.enum([
  "Greenfield",
  "Brownfield",
  "Other"
]);

export const HistoricValue = z.enum([
  "Yes",
  "No",
  "Partial"
]);

export const IBCConstructionType = z.enum([
  "Type I-A",
  "Type I-B",
  "Type II-A",
  "Type II-B",
  "Type III-A",
  "Type III-B",
  "Type IV-A",
  "Type IV-B",
  "Type IV-C",
  "Type IV-HT",
  "Type V-A",
  "Type V-B",
]);

export const SystemPodium = z.enum([
  "Not a podium building",
  "Primary system defined above is on a podium",
  "Primary system defined above is a podium"
]);

export const RefrigerantTypes = z.enum([
  "R-123",
  "R-1233zd",
  "R-514A",
  "R-134A",
  "R-513A",
  "R-515B",
  "R-1234ze",
  "R-22",
  "R-410A",
  "R-466A",
  "R-452B",
  "R-454B",
  "R-32",
  "Other",
]);

export const ClimateZones = z.enum([
  "0",
  "0A",
  "0B",
  "1",
  "1A",
  "1B",
  "2",
  "2A",
  "2B",
  "3",
  "3A",
  "3B",
  "3C",
  "4",
  "4A",
  "4B",
  "4C",
  "5",
  "5A",
  "5B",
  "5C",
  "6",
  "6A",
  "6B",
  "7",
  "7A",
  "7B",
  "8",
  "8A",
  "8B",
]);

export const CurrencyCodes = z.enum([
  "AED",
  "AFN",
  "ALL",
  "AMD",
  "ANG",
  "AOA",
  "ARS",
  "AUD",
  "AWG",
  "AZN",
  "BAM",
  "BBD",
  "BDT",
  "BGN",
  "BHD",
  "BIF",
  "BMD",
  "BND",
  "BOB",
  "BRL",
  "BSD",
  "BTN",
  "BWP",
  "BYN",
  "BZD",
  "CAD",
  "CDF",
  "CHF",
  "CLP",
  "CNY",
  "COP",
  "CRC",
  "CUP",
  "CVE",
  "CZK",
  "DJF",
  "DKK",
  "DOP",
  "DZD",
  "EGP",
  "ERN",
  "ETB",
  "EUR",
  "FJD",
  "FKP",
  "GBP",
  "GEL",
  "GGP",
  "GHS",
  "GIP",
  "GMD",
  "GNF",
  "GTQ",
  "GYD",
  "HKD",
  "HNL",
  "HRK",
  "HTG",
  "HUF",
  "IDR",
  "IMP",
  "INR",
  "IQD",
  "IRR",
  "ISK",
  "JEP",
  "JMD",
  "JOD",
  "JPY",
  "KES",
  "KGS",
  "KHR",
  "KMF",
  "KPW",
  "KRW",
  "KWD",
  "KYD",
  "KZT",
  "LAK",
  "LBP",
  "LKR",
  "LRD",
  "LSL",
  "LYD",
  "MAD",
  "MDL",
  "MGA",
  "MKD",
  "MMK",
  "MNT",
  "MOP",
  "MRU",
  "MUR",
  "MVR",
  "MWK",
  "MXN",
  "MYR",
  "MZN",
  "NAD",
  "NGN",
  "NIO",
  "NOK",
  "NPR",
  "NZD",
  "OMR",
  "PAB",
  "PEN",
  "PGK",
  "PHP",
  "PKR",
  "PLN",
  "PYG",
  "QAR",
  "RON",
  "RSD",
  "RUB",
  "RWF",
  "SAR",
  "SBD",
  "SCR",
  "SDG",
  "SEK",
  "SGD",
  "SHP",
  "SLL",
  "SOS",
  "SRD",
  "SSP",
  "STN",
  "SVC",
  "SYP",
  "SZL",
  "THB",
  "TJS",
  "TMT",
  "TND",
  "TOP",
  "TRY",
  "TTD",
  "TWD",
  "TZS",
  "UAH",
  "UGX",
  "USD",
  "UYU",
  "UZS",
  "VEF",
  "VND",
  "VUV",
  "WST",
  "XAF",
  "XAG",
  "XAU",
  "XCD",
  "XDR",
  "XOF",
  "XPF",
  "YER",
  "ZAR",
  "ZMW",
  "ZWL",
]);

export const ProjectPhaseReporting = z.enum([
  "Existing Condition",
  "Concept/Planning",
  "Schematic Design",
  "Design Development",
  "Construction Documentation",
  "Construction (Administration)",
  "As-Built",
]);

export const UnitSystem = z.enum([
  "Imperial Units System (IP, USA)",
  "International Units System (SI)"
]);

export const AreaMeasurementMethod = z.enum([
  "BOMA 2018 Gross Areas: Standard methods of Measurement (ANSI/BOMA Z65.3-2018)",
  "ASHRAE/LEED",
  "IPMS",
  // TODO: refactor into discriminated union if we're forcing user to specify
  // custom value when "Other" is selected, and review whether this should
  // apply to other lists containing "Other" as an option
  "Other (String for other)"
]);

export const CostSources = z.enum([
  "Estimated",
  "Actual"
]);

export const AssessmentPurposes = z.enum([
  "Certification i.e. LEED, ILFI, Envision",
  "Commitment Reporting i.e. AIA DDx, SE2050, MEP 2040, etc.",
  "Code Compliance",
  "Other"
]);

export const CutoffMethod = z.enum([
  "Mass",
  "Cost",
  "GWP"
]);

/** https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3 */
export const ISO_3166_1_A3 = z.enum([
  "ABW",
  "AFG",
  "AGO",
  "AIA",
  "ALA",
  "ALB",
  "AND",
  "ARE",
  "ARG",
  "ARM",
  "ASM",
  "ATA",
  "ATF",
  "ATG",
  "AUS",
  "AUT",
  "AZE",
  "BDI",
  "BEL",
  "BEN",
  "BES",
  "BFA",
  "BGD",
  "BGR",
  "BHR",
  "BHS",
  "BIH",
  "BLM",
  "BLR",
  "BLZ",
  "BMU",
  "BOL",
  "BRA",
  "BRB",
  "BRN",
  "BTN",
  "BVT",
  "BWA",
  "CAF",
  "CAN",
  "CCK",
  "CHE",
  "CHL",
  "CHN",
  "CIV",
  "CMR",
  "COD",
  "COG",
  "COK",
  "COL",
  "COM",
  "CPV",
  "CRI",
  "CUB",
  "CUW",
  "CXR",
  "CYM",
  "CYP",
  "CZE",
  "DEU",
  "DJI",
  "DMA",
  "DNK",
  "DOM",
  "DZA",
  "ECU",
  "EGY",
  "ERI",
  "ESH",
  "ESP",
  "EST",
  "ETH",
  "FIN",
  "FJI",
  "FLK",
  "FRA",
  "FRO",
  "FSM",
  "GAB",
  "GBR",
  "GEO",
  "GGY",
  "GHA",
  "GIB",
  "GIN",
  "GLP",
  "GMB",
  "GNB",
  "GNQ",
  "GRC",
  "GRD",
  "GRL",
  "GTM",
  "GUF",
  "GUM",
  "GUY",
  "HKG",
  "HMD",
  "HND",
  "HRV",
  "HTI",
  "HUN",
  "IDN",
  "IMN",
  "IND",
  "IOT",
  "IRL",
  "IRN",
  "IRQ",
  "ISL",
  "ISR",
  "ITA",
  "JAM",
  "JEY",
  "JOR",
  "JPN",
  "KAZ",
  "KEN",
  "KGZ",
  "KHM",
  "KIR",
  "KNA",
  "KOR",
  "KWT",
  "LAO",
  "LBN",
  "LBR",
  "LBY",
  "LCA",
  "LIE",
  "LKA",
  "LSO",
  "LTU",
  "LUX",
  "LVA",
  "MAC",
  "MAF",
  "MAR",
  "MCO",
  "MDA",
  "MDG",
  "MDV",
  "MEX",
  "MHL",
  "MKD",
  "MLI",
  "MLT",
  "MMR",
  "MNE",
  "MNG",
  "MNP",
  "MOZ",
  "MRT",
  "MSR",
  "MTQ",
  "MUS",
  "MWI",
  "MYS",
  "MYT",
  "NAM",
  "NCL",
  "NER",
  "NFK",
  "NGA",
  "NIC",
  "NIU",
  "NLD",
  "NOR",
  "NPL",
  "NRU",
  "NZL",
  "OMN",
  "PAK",
  "PAN",
  "PCN",
  "PER",
  "PHL",
  "PLW",
  "PNG",
  "POL",
  "PRI",
  "PRK",
  "PRT",
  "PRY",
  "PSE",
  "PYF",
  "QAT",
  "REU",
  "ROU",
  "RUS",
  "RWA",
  "SAU",
  "SDN",
  "SEN",
  "SGP",
  "SGS",
  "SHN",
  "SJM",
  "SLB",
  "SLE",
  "SLV",
  "SMR",
  "SOM",
  "SPM",
  "SRB",
  "SSD",
  "STP",
  "SUR",
  "SVK",
  "SVN",
  "SWE",
  "SWZ",
  "SXM",
  "SYC",
  "SYR",
  "TCA",
  "TCD",
  "TGO",
  "THA",
  "TJK",
  "TKL",
  "TKM",
  "TLS",
  "TON",
  "TTO",
  "TUN",
  "TUR",
  "TUV",
  "TWN",
  "TZA",
  "UGA",
  "UKR",
  "UMI",
  "URY",
  "USA",
  "UZB",
  "VAT",
  "VCT",
  "VEN",
  "VGB",
  "VIR",
  "VNM",
  "VUT",
  "WLF",
  "WSM",
  "YEM",
  "ZAF",
  "ZMB",
  "ZWE",
]);

/** https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3 */
export const ISO_3166_1_A3_Names = {
  ABW: "Aruba",
  AFG: "Afghanistan",
  AGO: "Angola",
  AIA: "Anguilla",
  ALA: "Åland Islands",
  ALB: "Albania",
  AND: "Andorra",
  ARE: "United Arab Emirates",
  ARG: "Argentina",
  ARM: "Armenia",
  ASM: "American Samoa",
  ATA: "Antarctica",
  ATF: "French Southern Territories",
  ATG: "Antigua and Barbuda",
  AUS: "Australia",
  AUT: "Austria",
  AZE: "Azerbaijan",
  BDI: "Burundi",
  BEL: "Belgium",
  BEN: "Benin",
  BES: "Bonaire, Sint Eustatius and Saba",
  BFA: "Burkina Faso",
  BGD: "Bangladesh",
  BGR: "Bulgaria",
  BHR: "Bahrain",
  BHS: "Bahamas",
  BIH: "Bosnia and Herzegovina",
  BLM: "Saint Barthélemy",
  BLR: "Belarus",
  BLZ: "Belize",
  BMU: "Bermuda",
  BOL: "Bolivia, Plurinational State of",
  BRA: "Brazil",
  BRB: "Barbados",
  BRN: "Brunei Darussalam",
  BTN: "Bhutan",
  BVT: "Bouvet Island",
  BWA: "Botswana",
  CAF: "Central African Republic",
  CAN: "Canada",
  CCK: "Cocos (Keeling) Islands",
  CHE: "Switzerland",
  CHL: "Chile",
  CHN: "China",
  CIV: "Côte d'Ivoire",
  CMR: "Cameroon",
  COD: "Congo, Democratic Republic of the",
  COG: "Congo",
  COK: "Cook Islands",
  COL: "Colombia",
  COM: "Comoros",
  CPV: "Cabo Verde",
  CRI: "Costa Rica",
  CUB: "Cuba",
  CUW: "Curaçao",
  CXR: "Christmas Island",
  CYM: "Cayman Islands",
  CYP: "Cyprus",
  CZE: "Czechia",
  DEU: "Germany",
  DJI: "Djibouti",
  DMA: "Dominica",
  DNK: "Denmark",
  DOM: "Dominican Republic",
  DZA: "Algeria",
  ECU: "Ecuador",
  EGY: "Egypt",
  ERI: "Eritrea",
  ESH: "Western Sahara",
  ESP: "Spain",
  EST: "Estonia",
  ETH: "Ethiopia",
  FIN: "Finland",
  FJI: "Fiji",
  FLK: "Falkland Islands (Malvinas)",
  FRA: "France",
  FRO: "Faroe Islands",
  FSM: "Micronesia, Federated States of",
  GAB: "Gabon",
  GBR: "United Kingdom of Great Britain and Northern Ireland",
  GEO: "Georgia",
  GGY: "Guernsey",
  GHA: "Ghana",
  GIB: "Gibraltar",
  GIN: "Guinea",
  GLP: "Guadeloupe",
  GMB: "Gambia",
  GNB: "Guinea-Bissau",
  GNQ: "Equatorial Guinea",
  GRC: "Greece",
  GRD: "Grenada",
  GRL: "Greenland",
  GTM: "Guatemala",
  GUF: "French Guiana",
  GUM: "Guam",
  GUY: "Guyana",
  HKG: "Hong Kong",
  HMD: "Heard Island and McDonald Islands",
  HND: "Honduras",
  HRV: "Croatia",
  HTI: "Haiti",
  HUN: "Hungary",
  IDN: "Indonesia",
  IMN: "Isle of Man",
  IND: "India",
  IOT: "British Indian Ocean Territory",
  IRL: "Ireland",
  IRN: "Iran, Islamic Republic of",
  IRQ: "Iraq",
  ISL: "Iceland",
  ISR: "Israel",
  ITA: "Italy",
  JAM: "Jamaica",
  JEY: "Jersey",
  JOR: "Jordan",
  JPN: "Japan",
  KAZ: "Kazakhstan",
  KEN: "Kenya",
  KGZ: "Kyrgyzstan",
  KHM: "Cambodia",
  KIR: "Kiribati",
  KNA: "Saint Kitts and Nevis",
  KOR: "Korea, Republic of",
  KWT: "Kuwait",
  LAO: "Lao People's Democratic Republic",
  LBN: "Lebanon",
  LBR: "Liberia",
  LBY: "Libya",
  LCA: "Saint Lucia",
  LIE: "Liechtenstein",
  LKA: "Sri Lanka",
  LSO: "Lesotho",
  LTU: "Lithuania",
  LUX: "Luxembourg",
  LVA: "Latvia",
  MAC: "Macao",
  MAF: "Saint Martin (French part)",
  MAR: "Morocco",
  MCO: "Monaco",
  MDA: "Moldova, Republic of",
  MDG: "Madagascar",
  MDV: "Maldives",
  MEX: "Mexico",
  MHL: "Marshall Islands",
  MKD: "North Macedonia",
  MLI: "Mali",
  MLT: "Malta",
  MMR: "Myanmar",
  MNE: "Montenegro",
  MNG: "Mongolia",
  MNP: "Northern Mariana Islands",
  MOZ: "Mozambique",
  MRT: "Mauritania",
  MSR: "Montserrat",
  MTQ: "Martinique",
  MUS: "Mauritius",
  MWI: "Malawi",
  MYS: "Malaysia",
  MYT: "Mayotte",
  NAM: "Namibia",
  NCL: "New Caledonia",
  NER: "Niger",
  NFK: "Norfolk Island",
  NGA: "Nigeria",
  NIC: "Nicaragua",
  NIU: "Niue",
  NLD: "Netherlands, Kingdom of the",
  NOR: "Norway",
  NPL: "Nepal",
  NRU: "Nauru",
  NZL: "New Zealand",
  OMN: "Oman",
  PAK: "Pakistan",
  PAN: "Panama",
  PCN: "Pitcairn",
  PER: "Peru",
  PHL: "Philippines",
  PLW: "Palau",
  PNG: "Papua New Guinea",
  POL: "Poland",
  PRI: "Puerto Rico",
  PRK: "Korea, Democratic People's Republic of",
  PRT: "Portugal",
  PRY: "Paraguay",
  PSE: "Palestine, State of",
  PYF: "French Polynesia",
  QAT: "Qatar",
  REU: "Réunion",
  ROU: "Romania",
  RUS: "Russian Federation",
  RWA: "Rwanda",
  SAU: "Saudi Arabia",
  SDN: "Sudan",
  SEN: "Senegal",
  SGP: "Singapore",
  SGS: "South Georgia and the South Sandwich Islands",
  SHN: "Saint Helena, Ascension and Tristan da Cunha",
  SJM: "Svalbard and Jan Mayen",
  SLB: "Solomon Islands",
  SLE: "Sierra Leone",
  SLV: "El Salvador",
  SMR: "San Marino",
  SOM: "Somalia",
  SPM: "Saint Pierre and Miquelon",
  SRB: "Serbia",
  SSD: "South Sudan",
  STP: "Sao Tome and Principe",
  SUR: "Suriname",
  SVK: "Slovakia",
  SVN: "Slovenia",
  SWE: "Sweden",
  SWZ: "Eswatini",
  SXM: "Sint Maarten (Dutch part)",
  SYC: "Seychelles",
  SYR: "Syrian Arab Republic",
  TCA: "Turks and Caicos Islands",
  TCD: "Chad",
  TGO: "Togo",
  THA: "Thailand",
  TJK: "Tajikistan",
  TKL: "Tokelau",
  TKM: "Turkmenistan",
  TLS: "Timor-Leste",
  TON: "Tonga",
  TTO: "Trinidad and Tobago",
  TUN: "Tunisia",
  TUR: "Türkiye",
  TUV: "Tuvalu",
  TWN: "Taiwan, Province of China",
  TZA: "Tanzania, United Republic of",
  UGA: "Uganda",
  UKR: "Ukraine",
  UMI: "United States Minor Outlying Islands",
  URY: "Uruguay",
  USA: "United States of America",
  UZB: "Uzbekistan",
  VAT: "Holy See",
  VCT: "Saint Vincent and the Grenadines",
  VEN: "Venezuela, Bolivarian Republic of",
  VGB: "Virgin Islands (British)",
  VIR: "Virgin Islands (U.S.)",
  VNM: "Viet Nam",
  VUT: "Vanuatu",
  WLF: "Wallis and Futuna",
  WSM: "Samoa",
  YEM: "Yemen",
  ZAF: "South Africa",
  ZMB: "Zambia",
  ZWE: "Zimbabwe",
} as const satisfies Record<typeof ISO_3166_1_A3._type, string>

/** https://en.wikipedia.org/wiki/ISO_4217 */
export const CurrencyCodeMap = {
  AED: "United Arab Emirates dirham",
  AFN: "Afghan afghani",
  ALL: "Albanian lek",
  AMD: "Armenian dram",
  ANG: "Netherlands Antillean guilder",
  AOA: "Angolan kwanza",
  ARS: "Argentine peso",
  AUD: "Australian dollar",
  AWG: "Aruban florin",
  AZN: "Azerbaijani manat",
  BAM: "Bosnia and Herzegovina convertible mark",
  BBD: "Barbados dollar",
  BDT: "Bangladeshi taka",
  BGN: "Bulgarian lev",
  BHD: "Bahraini dinar",
  BIF: "Burundian franc",
  BMD: "Bermudian dollar",
  BND: "Brunei dollar",
  BOB: "Boliviano",
  // BOV: "Bolivian Mvdol (funds code)",
  BRL: "Brazilian real",
  BSD: "Bahamian dollar",
  BTN: "Bhutanese ngultrum",
  BWP: "Botswana pula",
  BYN: "Belarusian ruble",
  BZD: "Belize dollar",
  CAD: "Canadian dollar",
  CDF: "Congolese franc",
  // CHE: "WIR euro (complementary currency)",
  CHF: "Swiss franc",
  // CHW: "WIR franc (complementary currency)",
  // CLF: "Unidad de Fomento (funds code)",
  CLP: "Chilean peso",
  CNY: "Renminbi",
  COP: "Colombian peso",
  // COU: "Unidad de Valor Real (UVR) (funds code)",
  CRC: "Costa Rican colon",
  CUP: "Cuban peso",
  CVE: "Cape Verdean escudo",
  CZK: "Czech koruna",
  DJF: "Djiboutian franc",
  DKK: "Danish krone",
  DOP: "Dominican peso",
  DZD: "Algerian dinar",
  EGP: "Egyptian pound",
  ERN: "Eritrean nakfa",
  ETB: "Ethiopian birr",
  EUR: "Euro",
  FJD: "Fiji dollar",
  FKP: "Falkland Islands pound",
  GBP: "Pound sterling",
  GEL: "Georgian lari",
  GHS: "Ghanaian cedi",
  GIP: "Gibraltar pound",
  GMD: "Gambian dalasi",
  GNF: "Guinean franc",
  GTQ: "Guatemalan quetzal",
  GYD: "Guyanese dollar",
  HKD: "Hong Kong dollar",
  HNL: "Honduran lempira",
  HTG: "Haitian gourde",
  HUF: "Hungarian forint",
  IDR: "Indonesian rupiah",
  // ILS: "Israeli new shekel",
  INR: "Indian rupee",
  IQD: "Iraqi dinar",
  IRR: "Iranian rial",
  ISK: "Icelandic króna",
  JMD: "Jamaican dollar",
  JOD: "Jordanian dinar",
  JPY: "Japanese yen",
  KES: "Kenyan shilling",
  KGS: "Kyrgyzstani som",
  KHR: "Cambodian riel",
  KMF: "Comoro franc",
  KPW: "North Korean won",
  KRW: "South Korean won",
  KWD: "Kuwaiti dinar",
  KYD: "Cayman Islands dollar",
  KZT: "Kazakhstani tenge",
  LAK: "Lao kip",
  LBP: "Lebanese pound",
  LKR: "Sri Lankan rupee",
  LRD: "Liberian dollar",
  LSL: "Lesotho loti",
  LYD: "Libyan dinar",
  MAD: "Moroccan dirham",
  MDL: "Moldovan leu",
  MGA: "Malagasy ariary",
  MKD: "Macedonian denar",
  MMK: "Myanmar kyat",
  MNT: "Mongolian tögrög",
  MOP: "Macanese pataca",
  MRU: "Mauritanian ouguiya",
  MUR: "Mauritian rupee",
  MVR: "Maldivian rufiyaa",
  MWK: "Malawian kwacha",
  MXN: "Mexican peso",
  // MXV: "Mexican Unidad de Inversion (UDI) (funds code)",
  MYR: "Malaysian ringgit",
  MZN: "Mozambican metical",
  NAD: "Namibian dollar",
  NGN: "Nigerian naira",
  NIO: "Nicaraguan córdoba",
  NOK: "Norwegian krone",
  NPR: "Nepalese rupee",
  NZD: "New Zealand dollar",
  OMR: "Omani rial",
  PAB: "Panamanian balboa",
  PEN: "Peruvian sol",
  PGK: "Papua New Guinean kina",
  PHP: "Philippine peso",
  PKR: "Pakistani rupee",
  PLN: "Polish złoty",
  PYG: "Paraguayan guaraní",
  QAR: "Qatari riyal",
  RON: "Romanian leu",
  RSD: "Serbian dinar",
  RUB: "Russian ruble",
  RWF: "Rwandan franc",
  SAR: "Saudi riyal",
  SBD: "Solomon Islands dollar",
  SCR: "Seychelles rupee",
  SDG: "Sudanese pound",
  SEK: "Swedish krona",
  SGD: "Singapore dollar",
  SHP: "Saint Helena pound",
  // SLE: "Sierra Leonean leone (new leone)",
  SOS: "Somalian shilling",
  SRD: "Surinamese dollar",
  SSP: "South Sudanese pound",
  STN: "São Tomé and Príncipe dobra",
  SVC: "Salvadoran colón",
  SYP: "Syrian pound",
  SZL: "Swazi lilangeni",
  THB: "Thai baht",
  TJS: "Tajikistani somoni",
  TMT: "Turkmenistan manat",
  TND: "Tunisian dinar",
  TOP: "Tongan paʻanga",
  TRY: "Turkish lira",
  TTD: "Trinidad and Tobago dollar",
  TWD: "New Taiwan dollar",
  TZS: "Tanzanian shilling",
  UAH: "Ukrainian hryvnia",
  UGX: "Ugandan shilling",
  USD: "United States dollar",
  // USN: "United States dollar (next day) (funds code)",
  // UYI: "Uruguay Peso en Unidades Indexadas (URUIURUI) (funds code)",
  UYU: "Uruguayan peso",
  // UYW: "Unidad previsional",
  UZS: "Uzbekistani sum",
  // VED: "Venezuelan digital bolívar",
  // VES: "Venezuelan sovereign bolívar",
  VND: "Vietnamese đồng",
  VUV: "Vanuatu vatu",
  WST: "Samoan tala",
  XAF: "CFA franc BEAC",
  XAG: "Silver (one troy ounce)",
  XAU: "Gold (one troy ounce)",
  // XBA: "European Composite Unit (EURCO) (bond market unit)",
  // XBB: "European Monetary Unit (E.M.U.-6) (bond market unit)",
  // XBC: "European Unit of Account 9 (E.U.A.-9) (bond market unit)",
  // XBD: "European Unit of Account 17 (E.U.A.-17) (bond market unit)",
  XCD: "East Caribbean dollar",
  XDR: "Special drawing rights	International Monetary Fund",
  XOF: "CFA franc BCEAO",
  // XPD: "Palladium (one troy ounce)",
  XPF: "CFP franc (franc Pacifique)",
  // XPT: "Platinum (one troy ounce)",
  // XSU: "SUCRE",
  // XTS: "Code reserved for testing",
  // XUA: "ADB Unit of Account",
  // XXX: "No currency",
  YER: "Yemeni rial",
  ZAR: "South African rand",
  ZMW: "Zambian kwacha",
  // ZWG: "Zimbabwe Gold",

  // OLDER
  GGP: "Guernsey pound",
  HRK: "Croatian kuna",
  IMP: "Manx pound",
  JEP: "Jersey pound",
  SLL: "Sierra Leonean leone (old leone)",
  VEF: "Venezuelan bolívar fuerte",
  ZWL: "Zimbabwean dollar"

} as const satisfies Record<typeof CurrencyCodes._type, string>;

export const FuelTypes = z.enum([
  "Grid Electricity",
  "Gas",
  "District Heating",
  "District Cooling",
  "Other fossil fuel sources",
  "Electricity from on-site renewables",
  "Electricity from purchased off-site renewables",
  "Electricity from dedicated off-site renewables"
]);

export const EndUses = z.enum([
  "Internal Lighting",
  "Exterior Lighting",
  "Receptacle Equipment",
  "Elevators Escalators",
  "Refrigeration",
  "Other Processes",
  "Space Heating",
  "Service Water Heating",
  "Space Cooling",
  "Heat Rejection",
  "Fans Interior",
  "Fans Parking Garage",
  "Pumps"
]);

export const OmniClassTable11Uses = z.enum([
  // TODO: fill out full list of available options
  // https://classes.engr.oregonstate.edu/cce/winter2018/cce203/NBIMS-US_V3/NBIMS-US_V3_2.4.4.1_OmniClass_Table_11_Construction_Entities_by_Function.pdf
  "Assembly Facility"
]);

export const WaterTypes = z.enum([
  "Potable",
  "Reclaimed",
  "Wastewater",
  "Other",
]);

export const ReductionStrategies = z.enum([
  "Building Reuse",
  "Material_Reuse",
  "Material Swap",
  "Alternate Structural System",
  "Structural Biobased Materials",
  "Non-structural Biobased Materials",
  "Structural Element Optimization",
  "Concrete Mix Optimization",
  "Exterior Envelope Optimization",
  "Interior Finishes Optimization",
  "Other Reductions",
  "Reductions Description",
]);